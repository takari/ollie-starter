<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.takari</groupId>
    <artifactId>takari</artifactId>
    <version>27</version>
  </parent>

  <groupId>com.walmartlabs.ollie</groupId>
  <artifactId>ollie-starter</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>takari-jar</packaging>

  <properties>
    <ollie.version>0.0.31</ollie.version>
    <launcher.version>0.124</launcher.version>
    <main-class>com.walmartlabs.ollie.example.Server</main-class>
    <!-- Database libraries and plugins -->
    <liquibase.version>3.5.1</liquibase.version>
    <jooq.version>3.11.11</jooq.version>
    <docker.plugin.version>0.30.0</docker.plugin.version>
    <build.helper.plugin.version>3.0.0</build.helper.plugin.version>
    <!-- Postgres -->
    <db.host>localhost</db.host>
    <db.port>5432</db.port>
    <db.schema>public</db.schema>
    <db.driver>org.postgresql.Driver</db.driver>
    <db.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.url>
    <db.username>postgres</db.username>
    <db.password>q1</db.password>
    <db.image>library/postgres:10.4-alpine</db.image>
    <db.changeLogPath>liquibase.xml</db.changeLogPath>
    <!-- Docker -->
    <jib-maven-plugin.version>1.4.0</jib-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.walmartlabs.ollie</groupId>
        <artifactId>ollie-targetplatform</artifactId>
        <version>${ollie.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.walmartlabs.ollie</groupId>
      <artifactId>ollie</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.takari.siesta</groupId>
      <artifactId>siesta-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build.helper.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker.plugin.version}</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          <version>${liquibase.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jooq</groupId>
          <artifactId>jooq-codegen-maven</artifactId>
          <version>${jooq.version}</version>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-ports</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <configuration>
              <portNames>
                <portName>db.portxx</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-sources-start</id>
            <phase>process-resources</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>integration-testing-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <images>
            <image>
              <name>${db.image}</name>
              <alias>db</alias>
              <run>
                <ports>
                  <port>${db.port}:5432</port>
                </ports>
                <env>
                  <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                </env>
                <wait>
                  <log>(?s).*ready for start up.*ready to accept connections.*</log>
                  <time>60000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>update</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <changeLogFile>${db.changeLogPath}</changeLogFile>
          <driver>org.postgresql.Driver</driver>
          <url>jdbc:postgresql://${db.host}:${db.port}/postgres</url>
          <username>${db.username}</username>
          <password>${db.password}</password>
          <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
          <databaseChangeLogTableName>databasechangelog</databaseChangeLogTableName>
          <databaseChangeLogLockTableName>databasechangeloglock</databaseChangeLogLockTableName>
          <changelogSchemaName>public</changelogSchemaName>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <logging>WARN</logging>
          <jdbc>
            <driver>org.postgresql.Driver</driver>
            <url>jdbc:postgresql://${db.host}:${db.port}/postgres</url>
            <user>${db.username}</user>
            <password>${db.password}</password>
          </jdbc>
          <generator>
            <database>
              <name>org.jooq.meta.postgres.PostgresDatabase</name>
              <inputSchema>public</inputSchema>
              <includes>.*</includes>
              <excludes>databasechangelog.*</excludes>
            </database>
            <target>
              <packageName>com.walmartlabs.persistence.jooq</packageName>
              <directory>target/generated-sources/jooq</directory>
            </target>
            <generate>
              <deprecationOnUnknownTypes>false</deprecationOnUnknownTypes>
            </generate>
          </generator>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>${jib-maven-plugin.version}</version>
        <configuration>
          <to>
            <image>docker.io/jvanzyl/ollie-starter</image>
          </to>
          <container>
            <ports>
              <port>9000</port>
            </ports>
            <!-- good defaults intended for Java 8 (>= 8u191) containers -->
            <jvmFlags>
              <jmxFlag>-server</jmxFlag>
              <jmxFlag>-Djava.awt.headless=true</jmxFlag>
              <jmxFlag>-XX:InitialRAMFraction=2</jmxFlag>
              <jmxFlag>-XX:MinRAMFraction=2</jmxFlag>
              <jmxFlag>-XX:MaxRAMFraction=2</jmxFlag>
              <jmxFlag>-XX:+UseG1GC</jmxFlag>
              <jmxFlag>-XX:MaxGCPauseMillis=100</jmxFlag>
              <jmxFlag>-XX:+UseStringDeduplication</jmxFlag>
            </jvmFlags>
          </container>
        </configuration>
        <executions>
          <execution>
            <id>build</id>
            <goals>
              <goal>dockerBuild</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
